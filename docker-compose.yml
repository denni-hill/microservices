version: '3.3'
services:
  auth-service:
    image: node:16-alpine3.14
    container_name: auth_service
    depends_on:
      - database
      - redis
      - kafka
    restart: always
    working_dir: "/usr/src/app"
    command: "npm run docker"
    volumes:
      - ./auth-service:/usr/src/app
      - ./.env:/usr/src/services.env/.env:ro
    environment:
      - NODE_ENV=docker
  counter-service:
    image: node:16-alpine3.14
    container_name: counter_service
    depends_on:
      - database
      - redis
      - kafka
    restart: always
    working_dir: "/usr/src/app"
    command: "npm run docker"
    volumes:
      - ./counter-service:/usr/src/app
      - ./.env:/usr/src/services.env/.env:ro
    environment:
      - NODE_ENV=docker
  cv-service:
    image: node:16-alpine3.14
    container_name: cv_service
    depends_on:
      - database
      - redis
      - kafka
    restart: always
    working_dir: "/usr/src/app"
    command: "npm run docker"
    volumes:
      - ./cv-service:/usr/src/app
      - ./.env:/usr/src/services.env/.env:ro
  logging-service:
    image: node:16-alpine3.14
    container_name: logging_service
    depends_on:
      - database
      - kafka
    restart: always
    working_dir: "/usr/src/app"
    command: "npm run docker"
    volumes:
      - ./logging-service:/usr/src/app
      - ./.env:/usr/src/services.env/.env:ro
      - ./logs:/usr/src/services.logs
  database:
    image: postgres:14-alpine
    container_name: services_db
    restart: always
    volumes:
      - ./databases/pg:/var/lib/postgresql/data
      - ./databases/initialization/pg:/docker-entrypoint-initdb.d
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=root
    ports:
      - 5432:5432
  redis:
    command: "redis-server /usr/local/etc/redis/redis.conf --requirepass $REDIS_PASSWORD"
    image: redis:7.0.0-alpine
    container_name: redis_server
    restart: always
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis/cache:/data
    env_file:
      - .env
    ports:
      - 6379:6379
  kafka:
    image: bitnami/kafka:3.2.1
    container_name: kafka_server
    restart: always
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ./kafka:/bitnami
    depends_on:
      - zookeeper
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    container_name: zookeeper_server
    ports:
      - 2181:2181
    volumes:
      - ./zookeeper_data:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  nginx:
    image: nginx:1.21.6-alpine
    container_name: nginx_server
    depends_on:
      - auth-service
      - cv-service
      - logging-service
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/cache:/var/lib/redis
    ports:
      - 80:80
    env_file:
      - .env