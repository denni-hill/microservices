user root;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    # FORCE REDIRECT FROM HTTP TO HTTPS
    # server {
    #     listen 80 default_server;

    #     server_name _;

    #     return 301 https://$host$request_uri;
    # }
    # END OF FORCE REDIRECT FROM HTTP TO HTTPS

    # LOAD BALANCING
    upstream auth {
        server auth-service;
    }

    # upstream cv {
    #     server cv-service;
    # }

    upstream counter {
        server counter-service;
    }

    # upstream frontend {
    #     server frontend-service;
    # }
    # END OF LOAD BALANCING

    # FRONTEND REVERSE-PROXY
    # server {
    #     # listen 443 ssl http2;
    #     # listen [::]:443 ssl http2;
    #     listen 80;
    #     server_name $domain www.$domain;

    #     # ssl_certificate /usr/src/app/ssl/fullchain.pem;
    #     # ssl_certificate_key /usr/src/app/ssl/privkey.pem;

    #     location / {
    #         proxy_pass http://frontend;
    #         proxy_set_header Host $domain;
    #         proxy_pass_request_headers on;
    #     }
    # }
    # END OF FRONTEND REVERSE-PROXY

    # API SERVICES COMPOSITION
    server {
        # listen 443 ssl http2;
        # listen [::]:443 ssl http2;
        listen 80;
        server_name api.$DOMAIN www.api.$DOMAIN;

        # ssl_certificate /usr/src/app/ssl/fullchain.pem;
        # ssl_certificate_key /usr/src/app/ssl/privkey.pem;

        location ~* /auth/(.*) {
            proxy_pass http://auth/$1;
            proxy_set_header Host $host;
            proxy_pass_request_headers on;
        }

        # location ~* /cv/(.*) {
        #     proxy_pass http://cv/$1;
        #     proxy_set_header Host $host;
        #     proxy_pass_request_headers on;
        # }

        location ~* /counter/(.*) {
            proxy_pass http://counter/$1;
            proxy_set_header Host $host;
            proxy_pass_request_headers on;
        }
    }
    # END OF API SERVICES COMPOSITION
}